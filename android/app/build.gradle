plugins {
    id "com.android.application"
    id "kotlin-android"
    id "dev.flutter.flutter-gradle-plugin"
}

def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

android {
    compileSdkVersion 35
    namespace 'foundation.privacybydesign.irmamobile'

    lintOptions {
        disable 'InvalidPackage'
    }

    defaultConfig {
        applicationId "foundation.privacybydesign.irmamobile.alpha"
        minSdkVersion 23
        targetSdkVersion 35
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    flavorDimensions "track"
    productFlavors {
        alpha {
            dimension "track"
            applicationId "foundation.privacybydesign.irmamobile.alpha"
        }
        beta {
            dimension "track"
            applicationId "org.irmacard.cardemu"
        }
    }

    signingConfigs {
        if (project.hasProperty("keyStoreFile")) {
            release {
                storeFile file(project.property("keyStoreFile"))
                storePassword project.property("keyStorePassword")
                keyAlias project.property("keyAlias")
                keyPassword project.property("keyPassword")
            }
        }
    }

    buildTypes {
        release {
            // Flutter does not support building for x86 in release mode.
            ndk {
                abiFilters "armeabi-v7a", "arm64-v8a", "x86_64"
            }

            if (project.hasProperty("keyStoreFile")) {
                signingConfig signingConfigs.release
            } else {
                // For testing purposes we sign with dummy credentials if no key properties are given.
                signingConfig signingConfigs.debug
            }
        }
    }

    bundle {
        // Store archive and code transparency cannot be combined yet.
        // https://stackoverflow.com/questions/74275816/code-verification-error-when-uploading-aab-files-added-after-transparency-meta
        storeArchive {
            enable = false
        }
        if (project.hasProperty("keyStoreFile")) {
            codeTransparency {
                signing {
                    storeFile file(project.property("keyStoreFile"))
                    storePassword project.property("keyStorePassword")
                    keyAlias project.property("keyAlias")
                    keyPassword project.property("keyPassword")
                }
            }
        }
    }
}

flutter {
    source '../..'
}

dependencies {
    implementation project(':irmagobridge')
    implementation "androidx.browser:browser:1.2.0"
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test:runner:1.1.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.0'
}
